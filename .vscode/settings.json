{
  "editor.formatOnSave": true,
  "editor.tabSize": 2,
  "editor.rulers": [120],
  "files.eol": "\n",
  "files.insertFinalNewline": true,

  "eslint.experimental.useFlatConfig": true,
  "editor.codeActionsOnSave": { "source.fixAll.eslint": "explicit" },
  "eslint.options": {
    "overrideConfig": {
      "rules": {
        // The following rules are auto-fixable, but can be inconvenient when they run on save
        // with work-in-progress. Instead, they can be run on the pre-commit hook (and caught in the
        // CI pipeline if someone forgets to setup or disables the hooks)
        "no-useless-return": "off",
        "unused-imports/no-unused-imports": "off",
        "@typescript-eslint/prefer-readonly": "off",
        "jsdoc/no-blank-blocks": "off",
        // Make these show as warnings in the editor without enabling auto-fix
        "disable-autofix/no-useless-return": "warn",
        "disable-autofix/unused-imports/no-unused-imports": "warn",
        "disable-autofix/@typescript-eslint/prefer-readonly": "warn",
        "disable-autofix/jsdoc/no-blank-blocks": "warn"
      }
    }
  },

  "[github-actions-workflow]": { "editor.defaultFormatter": "esbenp.prettier-vscode", "editor.formatOnSave": true },
  "[javascript]": { "editor.defaultFormatter": "esbenp.prettier-vscode", "editor.formatOnSave": true },
  "[json]": { "editor.defaultFormatter": "esbenp.prettier-vscode", "editor.formatOnSave": true },
  "[jsonc]": { "editor.defaultFormatter": "esbenp.prettier-vscode", "editor.formatOnSave": true },
  "[markdown]": { "editor.defaultFormatter": "esbenp.prettier-vscode", "editor.formatOnSave": true },
  "[typescript]": { "editor.defaultFormatter": "esbenp.prettier-vscode", "editor.formatOnSave": true },
  "[yaml]": { "editor.defaultFormatter": "esbenp.prettier-vscode", "editor.formatOnSave": true },

  "typescript.tsdk": "node_modules/typescript/lib",
  "prettier.prettierPath": "node_modules/prettier",

  "cSpell.enableFiletypes": ["github-actions-workflow"],
  "cSpell.words": [
    "autofix",
    "chardet",
    "classname",
    "davelosert",
    "dorny",
    "npmjs",
    "nvmrc",
    "Parens",
    "revparse",
    "typecheck",
    "unshallow",
    "unstub",
    "Vitest",
    "ytanikin"
  ]
}
